# gh workflow run workflow-name.yml -f param1=value1 -f param2=value2

name: CD

on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: "Branch name"
        required: false
        default: "main"
      deploy_env:
        description: "Should the python environment be (re)ployed? (y/n)"
        required: false
        default: "n"
      reference:
        description: "Reference to add in run name"
        required: false
        default: "main branch"

run-name: Deploy ${{ github.event.inputs.reference }}

jobs:
  deploy-env:
    if: github.event.inputs.deploy_env == 'y'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch_name }}
      - name: (Re)deploy environment
        uses: cross-the-world/ssh-scp-ssh-pipelines@latest
        with:
          host: ${{ secrets.SSH_HOST }}
          user: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          connect_timeout: 10s
          scp: |
            './env.yaml' => /home/${{ secrets.SSH_USER }}
          last_ssh: |
            micromamba env create -y -f /home/${{ secrets.SSH_USER }}/env.yaml 

  deploy-app:
    needs: deploy-env
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch_name }}
      - name: Deploy to Production server
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.SSH_HOST }}
          REMOTE_USER: ${{ secrets.SSH_USER }}
          REMOTE_PORT: ${{ secrets.SSH_PORT }}
          SOURCE: "milk_tracker"
          EXCLUDE: "assets/journal.*"
          TARGET: "/home/${{ secrets.SSH_USER }}/www"
          SCRIPT_BEFORE: |
            systemctl --user stop milktracker
          SCRIPT_AFTER: |
            systemctl --user start milktracker
